// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace Bookmaster.Modules.Books.Infrastructure.Database.Migrations
{
    /// <inheritdoc />
    public partial class Init : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "books");

            migrationBuilder.CreateTable(
                name: "authors",
                schema: "books",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_authors", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "books",
                schema: "books",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    title = table.Column<string>(type: "text", nullable: false),
                    subtitle = table.Column<string>(type: "text", nullable: true),
                    description = table.Column<string>(type: "text", nullable: false),
                    text_snippet = table.Column<string>(type: "text", nullable: true),
                    google_book_id = table.Column<string>(type: "text", nullable: false),
                    google_book_info_link = table.Column<string>(type: "text", nullable: true),
                    page_count = table.Column<int>(type: "integer", nullable: false),
                    thumbnail = table.Column<string>(type: "text", nullable: true),
                    small_thumbnail = table.Column<string>(type: "text", nullable: true),
                    publisher = table.Column<string>(type: "text", nullable: true),
                    published_date = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_books", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "people",
                schema: "books",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    email = table.Column<string>(type: "text", nullable: false),
                    first_name = table.Column<string>(type: "text", nullable: false),
                    last_name = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_people", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "book_authors",
                schema: "books",
                columns: table => new
                {
                    authors_id = table.Column<Guid>(type: "uuid", nullable: false),
                    book_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_book_authors", x => new { x.authors_id, x.book_id });
                    table.ForeignKey(
                        name: "fk_book_authors_authors_authors_id",
                        column: x => x.authors_id,
                        principalSchema: "books",
                        principalTable: "authors",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_book_authors_books_book_id",
                        column: x => x.book_id,
                        principalSchema: "books",
                        principalTable: "books",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "library_entries",
                schema: "books",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    book_id = table.Column<Guid>(type: "uuid", nullable: false),
                    person_id = table.Column<Guid>(type: "uuid", nullable: false),
                    created_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_library_entries", x => x.id);
                    table.ForeignKey(
                        name: "fk_library_entries_books_book_id",
                        column: x => x.book_id,
                        principalSchema: "books",
                        principalTable: "books",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_library_entries_people_person_id",
                        column: x => x.person_id,
                        principalSchema: "books",
                        principalTable: "people",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                schema: "books",
                table: "people",
                columns: new[] { "id", "email", "first_name", "last_name" },
                values: new object[,]
                {
                    { new Guid("2c356126-124e-4b99-b2b3-1c848dedf966"), "ryan@bookmaster.com", "Ryan", "Harris" },
                    { new Guid("9ed784e0-6231-4bf8-9b98-b16716dede98"), "claudene@bookmaster.com", "Claudene", "Harris" }
                });

            migrationBuilder.CreateIndex(
                name: "ix_book_authors_book_id",
                schema: "books",
                table: "book_authors",
                column: "book_id");

            migrationBuilder.CreateIndex(
                name: "ix_library_entries_book_id",
                schema: "books",
                table: "library_entries",
                column: "book_id");

            migrationBuilder.CreateIndex(
                name: "ix_library_entries_person_id",
                schema: "books",
                table: "library_entries",
                column: "person_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "book_authors",
                schema: "books");

            migrationBuilder.DropTable(
                name: "library_entries",
                schema: "books");

            migrationBuilder.DropTable(
                name: "authors",
                schema: "books");

            migrationBuilder.DropTable(
                name: "books",
                schema: "books");

            migrationBuilder.DropTable(
                name: "people",
                schema: "books");
        }
    }
}
